{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/contracts.coffee",
			"settings":
			{
				"buffer_size": 28767,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Cakefile",
			"settings":
			{
				"buffer_size": 649,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 694,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Contracts.autoload();\n\nvar server = \"server\";\nvar client = \"client\";\n\n\nmodule(\"Basic Contracts\");\n\n\ntest(\"checking id\", function() {\n    var id = guard(\n        fun(Num, Num),\n        function(x) { return x; });\n\n    ok(id(3));\n    raises(function() { id(\"foo\"); });\n    var f = 42;\n    // id(\"foo\");\n});\n\ntest(\"names of contracts\", function() {\n    equal(Str.cname, \"Str\");\n    equal(Num.cname, \"Num\");\n    // todo: fix\n    // equal(M.idObj.id.__cname, \"Number -> Number\");\n});\n\ntest(\"multiple args for function contracts\", function() {\n    var f1 = function(a, b, c) { return a + 1; };\n    var f2 = function(a, b, c) { return b + \"foo\"; };\n    var f3 = function(a, b, c) { return c; };\n    var f1c = guard(\n        fun([Num, Str, Bool], Num),\n        f1);\n    var f2c = guard(\n        fun([Num, Str, Bool], Str),\n        f2);\n    var f3c = guard(\n        fun([Num, Str, Bool], Str),\n        f3);\n\n    equal(f1c(1, \"foo\", false), 2);\n    equal(f2c(1, \"foo\", false), \"foofoo\");\n    raises(function() { f1c(\"foo\", 1, false); }, \"bad client\");\n    raises(function() { f2c(\"foo\", 1, false); }, \"bad client\");\n    raises(function() { f3c(1, \"foo\", false); }, \"bad server\");\n});\n\ntest(\"optional args for functions\", function() {\n    var f = guard(\n        fun([Num, opt(Str)], Num),\n        function(x, y) { return x; });\n\n    ok(f(42), \"the one arg works\");\n    ok(f(42, \"hello\"), \"can use the optional arg\");\n    raises(function() { f(42, 42); }, \"broken contract on optional arg\");\n\n    raises(function() {\n        guard(fun([Num, opt(Str), Bool], Num),\n              function(x) { return x; });\n    }, \"cannot guard with a required arg after an optional arg\");\n});\n\ntest(\"higher order functions\", function() {\n    var id = function(x) { return x; };\n    var pred = guard(\n        fun([fun(Bool, Bool), Bool], Bool),\n        function(p, x) { return p(x); });\n\n    ok(pred(id, true), \"higher order works\");\n    raises(function () { pred(id, 42); }, \"client broke contract\");\n\n    var pred_client_ho = guard(\n        fun([fun(Bool, Str), Bool], Bool),\n        function(p, x) { return p(x); });\n    raises(function () { pred_client_ho(id, true); }, \"client broke contract\");\n    raises(function () { pred_client_ho(function(x) { return \"foo\"; }, true); }, \"server broke contract\");\n\n    var pred_server_ho = guard(\n        fun([fun(Str, Bool), Bool], Bool),\n        function(p, x) { return p(x); });\n    raises(function () { pred_server_ho(id, true); }, \"server broke contract\");\n});\n\ntest(\"dependent functions\", function() {\n    var id = guard(\n        fun(Str, function(arg) { return check(function(r) { return arg === r; }, \"id===id\"); }),\n        function(x) { return x; });\n\n    ok(id(\"foo\"), \"id really is id\");\n\n    var not_id = guard(\n        fun(Str, function(arg) { return check(function(r) { return arg === r; }, \"id===id\"); }),\n        function(x) { return x + \"foo\"; });\n    raises(function() { not_id(\"foo\"); }, \"violates dependent contract\");\n});\n\n\ntest(\"basic functions\", function() {\n    // some of this is duped from above\n    var id = function(x) { return x; };\n    var idc = guard(fun(Num, Num), id);\n    same(idc(4), 4,\n         \"id obeys contract\");\n    raises(function() { idc(\"foo\"); },\n           \"id breaks contract\");\n\n\n    var id_nonew = guard(\n        fun(Num, Num, {callOnly: true}),\n        id);\n    same(id_nonew(4), 4,\n         \"nonew obeys contract\");\n    raises(function() { new id_nonew(4); },\n           \"nonew obeys contract but called by new\");\n\n    raises(function() { id_nonew(\"foo\"); },\n           \"nonew breaks contract\");\n    raises(function() { new id_nonew(\"foo\"); },\n           \"no newbreaks contract and called by new\"); // todo: distinguish in blame message\n\n});\n\ntest(\"constructor contracts\", function() {\n    var good_ctor = guard(\n        ctor(Str, object({a: Str, b: Num})),\n        function(s) { this.a = s; this.b = 42; });\n    raises(function() { good_ctor(\"foo\"); },\n           \"onlynew obeys contract but not called with new\");\n    ok(new good_ctor(\"foo\"),\n         \"onlynew obeys contract and called by new\");\n\n    var bad_ctor = guard(\n        ctor(Num, object({a: Str, b: Num})),\n        function(s) { this.a = 42; this.b = s; });\n    raises(function() { new bad_ctor(\"foo\"); } );\n    var safe_ctor = guard(\n        ctorSafe(Str, object({a: Str, b:Num})),\n        function(s) { this.a = s; this.b = 42; });\n    ok(new safe_ctor(\"foo\"), \"can call with new\");\n    ok((new safe_ctor(\"foo\")).a, \"can call with new and get prop\");\n    ok(safe_ctor(\"foo\"), \"can call without new\");\n});\n\ntest(\"call/new have different contracts\", function() {\n    var ctor_call = guard(\n        fun({\n            call: [Num, object({a: Str, b: Num})],\n            new: [Str, object({a: Str, b: Num})]\n        }),\n        function(x) {\n            if(typeof(x) === \"number\") {\n                this.a = \"foo\";\n                this.b = x;\n            } else {\n                this.a = x;\n                this.b = 42;\n            }\n            return this;\n        });\n    same(ctor_call(222).b, 222, \"calling works for combined ctor/call\");\n    raises(function() { ctor_call(\"hello\"); }, \"broken contract for calling in combined ctor/call\");\n    same(new ctor_call(\"hello\").a, \"hello\", \"new works for combined ctor/call\");\n    raises(function() { new ctor_call(42); }, \"broken contract for new in combined ctor/call\");\n});\n\ntest(\"this contract on functions\", function() {\n    var f = guard(\n        fun(Str, Str,\n            { this: object({ a: Str, b: Num })}),\n        function(s) { return this.a + this.b; });\n\n    o = {a: \"foo\", b: 42, fun: f};\n    same(o.fun(\"foo\"), \"foo42\", \"obeys contract\");\n    raises(function() { f(\"foo\"); }, \"fails contract\");\n});\n\n\ntest(\"can contract for both function + objects properties\", function() {\n    var id = function(x, y) { return x; };\n    ok(id(4) === 4);\n    ok(id.length === 2);\n    var idc = guard(\n        and(\n            fun(Str, Str),\n            object({ length: Str })),\n        id);\n    raises(function() { idc(4) === 4; });\n    raises(function() { idc.length; });\n});\n\ntest(\"checking Lists\", function() {\n\n    // raises(function() { guard(List, {length: 3}, server, client); },\n    //        \"not a list but looks like it\");\n\n    // var jsarr = guard(JsArray, [1,2,3], server, client);\n    // ok(jsarr[0] = 4, \"js arrays are mutable\");\n    // ok(delete jsarr[1], \"js arrays can have holes\");\n\n    // var l = Object.freeze([1,2,3]);\n    // var lc = guard(List, l, server, client);\n    // ok(lc[0]);\n\n    // raises(function() { lc[0] = 4; },\n    //        \"lists are immutable\");\n\n    // raises(function() { delete lc[0]; },\n    //        \"cannot delete list elements\");\n\n    // var hole_l = [1,2,3];\n    // delete hole_l[1];\n    // hole_l = Object.freeze(hole_l);\n    // raises(function() { guard(List, hole_l, server, client);  },\n    //        \"lists have no holes\");\n\n    // var undef_l = Object.freeze([1,undefined, 3]);\n    // ok(guard(List, undef_l, server, client),\n    //    \"lists can have undefined\");\n\n    // var sl = [1,2,3];\n    // delete sl[2];\n    // sl = Object.freeze(sl);\n    // raises(function() { guard(SaneArray, sl, server, client); },\n    //        \"can't contract a sane array with holes\");\n\n    // var saneArr = guard(SaneArray, [1,2,3], server, client);\n    // ok(saneArr[1] = 44,\n    //    \"sane arrays are mutable\");\n    // raises(function() { delete saneArr[1]; },\n    //        \"sane arrays can't have holes\");\n\n});\n\ntest(\"checking sealed/frozen objects\", function() {\n    var o = Object.seal({x:3});\n    ok(guard(\n        object({ x: Num }, {sealed: true}),\n        o),\n       \"can contract sealed object\");\n\n    raises(function() { guard(\n        object({ x: Num }, {sealed: true}),\n        {x:3});\n    }, \"object is not sealed\");\n\n    ok(guard(\n        object({ x: Num }, {sealed: false}),\n        {x:3}),\n       \"object is not sealed\");\n\n    raises(function() { guard(\n        object({ x: Num }, {sealed: false}),\n        o); \n    }, \"object is sealed\");\n\n    o = Object.freeze({x:3});\n    ok(guard(\n        object({ x: Num }, {frozen: true}),\n        o),\n       \"can contract frozen object\");\n\n    raises(function() { guard(\n        object({ x: Num }, {frozen: true}),\n        {x:3});\n    }, \"object is not frozen\");\n\n    ok(guard(\n        object({ x: Num }, {frozen: false}),\n        {x:3}),\n       \"object is not frozen\");\n\n    raises(function() { guard(\n        object({ x: Num }, {frozen: false}),\n        o)\n    }, \"object is frozen\");\n\n    var fr = guard(\n        object({ x: Num }, {frozen: true}),\n        o);\n        \n    same(fr.x, 3, \"can read frozen object\");\n    raises(function() { Object.defineProperty(fr, \"y\", {value: 42}); }, \"adding property to frozen obj\");\n    raises(function() { fr.x = 55;}, \"writing to frozen object\");\n    raises(function() { delete fr.x;}, \"deleting from frozen object\");\n\n    raises(function() { guard(\n        object({ x: Num }, {extesible: false}),\n        {})\n    }, \"object is not extensible\");\n    var noex = guard(\n        object({ x: Num }, {extesible: false}),\n        Object.preventExtensions(o));\n    raises(function() { noex.foo = 42; }, \"can't set new property on non-extensible object\");\n});\n\ntest(\"object with optional properties\", function() {\n    raises(function() { guard(\n        object({ a: opt(Num), b: Str }),\n        {a: 42});\n    }, \"missing required property\");\n    ok(guard(\n        object({ a: opt(Num), b: Str }),\n        {b: \"foo\"}),\n       \"missing optional property\");\n\n});\n\ntest(\"property descriptors on an object's properties\", function() {\n    var o = {};\n    Object.defineProperty(o, \"a\", { value: 42, writable: false });\n    Object.defineProperty(o, \"b\", { value: \"foo\", writable: true });\n    Object.defineProperty(o, \"c\", { value: true, configurable: false });\n    Object.defineProperty(o, \"d\", { value: 42, enumerable: false });\n    ok(guard(\n        object({\n            a: {value: Num, writable: false},\n            b: {value: Str, writable: true},\n            c: {value: opt(Bool), configurable: false},\n            d: {value: Num, enumerable: false}\n        }),\n        o),\n       \"all prop descriptors match the contract\");\n    o = {};\n    Object.defineProperty(o, \"a\", { value: 42, writable: true });\n    Object.defineProperty(o, \"b\", { value: \"foo\", writable: false });\n    Object.defineProperty(o, \"c\", { value: true, configurable: true });\n    Object.defineProperty(o, \"d\", { value: 42, enumerable: true });\n    raises(function() { guard(\n        object({\n            a: {value: Num, writable: false},\n            b: {value: Str, writable: true},\n            c: {value: opt(Bool), configurable: false},\n            d: {value: Num, enumerable: false}\n        }),\n        o);\n    }, \"all prop descriptors match the contract\");\n});\n\ntest(\"recursive object\", function() {\n    var o = {a: 42, b: null, c: function(x) { return {a: \"foo\"}; }, d: {z: \"bar\", s: null}};\n    o.b = o;\n    o.d.s = o.d;\n\n    o = guard(\n        object({\n            a: Num,\n            b: Self,\n            c: fun(Num, Self),\n            d: object({\n                z: Str,\n                s: Self\n            })\n        }),\n        o);\n\n    same(o.a, 42, \"abides by contract\");\n    same(o.b.a, 42, \"abides by contract\");\n    raises(function() { o.b.a = \"foo\"; }, \"violates contract\");\n\n    raises(function() { o.c(\"foo\"); }, \"violates contract\");\n    raises(function() { o.c(42).a; }, \"server violates contract\");\n    same(o.d.z, \"bar\", \"abides by contract\");\n    raises(function() { o.d.s.z = 42; }, \"violates contract\");\n\n});\n\ntest(\"objects with pre/post conditions\", function() {\n    var withPre = {x: 0, dec: function() { return --this.x; }};\n    ok(withPre.dec() === -1, \"works before contract\");\n    var withPreC = guard(\n        object({\n            x: Num,\n            dec: fun(any, Num, {\n                pre: function(obj) {\n                    return obj.x > 0;\n                },\n                post: function(obj) {\n                    return obj.x > 0;\n                }\n            })\n        }),\n        withPre);\n    raises(function() { withPreC.dec(); }, \"doesn't pass precondition\");\n    withPreC.x = 1;\n    raises(function() { withPreC.dec(); }, \"doesn't pass postcondition\");\n});\n\ntest(\"checking prototypes\", function() {\n    var A = {\n        a: function() { return \"foo\"; },\n        b: 42\n    };\n    equals(A.a(), \"foo\");\n    equals(A.b, 42);\n\n    var AC = guard(object({a: fun(any, Str), b: Num}), A);\n    equals(AC.a(), \"foo\");\n    equals(AC.b, 42);\n    raises(function() { AC.b = \"42\"; }, \"contract doesn't allow a string to flow to b\");\n    equals(AC.b, 42, \"b was not changed in previous test\");\n\n    var ABadC = guard(object({a: fun(any, Num), b: Str}), A);\n    raises(function() { ABadC.a(); }, \"contract says number but function give string\");\n    raises(function() { ABadC.b; }, \"contract doesn't match value stored in b\");\n\n    var B = Object.create(A);\n    equals(B.a(), \"foo\");\n    equals(B.b, 42);\n\n    var BC = Object.create(AC);\n    equals(BC.a(), \"foo\");\n    equals(BC.b, 42);\n    ok(BC.b = \"foo\", \"since b is assigned to BC not proto there is not contract to stop it\");\n    equals(BC.b, \"foo\");\n\n    var BBadC = Object.create(ABadC);\n    raises(function() { BBadC.a(); }, \"contract on prototype says number but gives string\");\n    raises(function() { BBadC.b; }, \"contract on proto still doesn't match value stored in b\");\n\n    var BGoodAttemptC = guard(\n        object({a: fun(any, Str), b: Num}),\n        BBadC);\n    raises(function() { BGoodAttemptC.a(); }, \"contract on prototype still says there is a problem\");\n    BBadC.a = function() { return \"bar\"; };\n    equals(BBadC.a(), \"bar\", \"ok now we are shadowning bad contract\");\n\n    var B_has_C_not_A = guard(object({a: fun(any, Str), b: Str}),\n                                Object.create(A));\n    raises(function() { B_has_C_not_A.b; }, \"blame even though contract is on object but prop is on proto\");\n});\n\n\ntest(\"basic arrays\", function() {\n    var ar = guard(\n        arr([Str, Bool]),\n        [\"foo\", false]);\n    same(ar[0], \"foo\", \"tupel form of array\");\n    same(ar[1], false, \"tupel form of array\");\n    ar = guard(\n        arr([Str, Bool]),\n        [false, \"foo\", 42]);\n    raises(function() { ar[0]; }, \"brakes tuple form\");\n    raises(function() { ar[1]; }, \"brakes tuple form\");\n    ok(ar[2], \"not covered by contract\");\n    ar = guard(\n        arr([___(Bool)]),\n        [true, \"foo\", true, false, true]);\n    ok(ar[2], \"arbitrary number of bools ___(Bool)\");\n    ok(ar[4], \"arbitrary number of bools ___(Bool)\");\n    raises(function() { ar[1]; }, \"element doesn't match ___(Bool) contract\");\n    raises(function() { ar[0] = \"foo\"; }, \"element doesn't match ___(Bool) contract\");\n\n    ar = guard(\n        arr([Str, Num, ___(Bool)]),\n        [false, 42, true, false, true]);\n    ok(ar[1], \"arbitrary number of bools ___(Bool)\");\n    ok(ar[4], \"arbitrary number of bools ___(Bool)\");\n    raises(function() { ar[0]; }, \"element doesn't match ___(Bool) contract\");\n});\n\nmodule(\"temporal contracts\");\n\ntest(\"basic temporal contracts\", function() {\n    var on = [true],\n        NumC = check(function(x, stack) { \n            if(stack[0][0]) { return typeof x === 'number'; }\n            else { return false; }\n        });\n    var incC = guard(\n        fun([NumC], NumC, {checkStack: function(stack) { return stack[0][0]; }}),\n        function(x) { return x + 1; },\n        false, \n        function(stack) { stack.push(on); });\n\n    same(incC(42), 43, \"works when membrane is on\");\n    on[0] = false;\n    raises(function() { incC(42); }, \"membrane is off so fails\");\n});\n\ntest(\"temporal contracts can do dependency\", function() {\n    var NumArg = check(function(x, stack) {\n            stack.push(x);\n            return typeof x === 'number';\n        }), \n        NumRng = check(function(x, stack) {\n            var arg = stack.pop();\n            return (typeof x === 'number') && (x > arg);\n        }),\n        incC = guard(\n            fun([NumArg], NumRng),\n            function(x) { return x + 1; }),\n        incBadC = guard(\n            fun([NumArg], NumRng),\n            function(x) { return x - 1; });\n\n    same(incC(42), 43, \"abides by contract\");\n    raises(function() { incBadC(42); }, \"violates contract\");\n});\n\n\ntest(\"a basic temporal contract forbidding calling after return\", function() {\n    var stolen_ref,\n        apply = guard(\n        fun([fun(any, Bool, {checkStack: function(stack) {\n            return stack.pop();\n        }}), any],\n            check(function(x, stack) {\n                stack.pop(); stack.push(false);\n                return typeof x === 'boolean';\n            })), \n        function(cmp, x) { stolen_ref = cmp; return cmp(x); },\n        false,\n        function(stack) { stack.push(true); });\n\n    same(apply(function(x) { return x > 0; }, 42), true);\n    raises(function() { stolen_ref(42); }, \"attempted to call function after return\");\n});\n\ntest(\"can disable contract checking\", function() {\n    Contracts.enabled(false);\n    var id = guard(\n        fun(Num, Num),\n        function(x) { return x; }\n    );\n    same(id(\"foo\"), \"foo\", \"violates contract but ok since they are disabled\");\n    Contracts.enabled(true);\n    id = guard(\n        fun(Num, Num),\n        function(x) { return x; }\n    );\n    raises(function() { id(\"foo\"); }, \"violates contract and now raises blame\");\n});\n\ntest(\"contract equality\", function() {\n    var c1 = fun(Num, Num),\n        c2 = fun(Num, Num),\n        o1 = object({a: Num}),\n        o2 = object({a: Num});\n    \n\n    ok(c1.equals(c1), \"function is eq to itself\");\n    ok(c1.equals(c2), \"same fun contracts\");\n\n    c1 = fun(Num, Num);\n    c2 = fun(Str, Num);\n    ok(!c1.equals(c2), \"different fun contracts\");\n    c1 = fun(Num, Num);\n    c2 = fun(Num, Str);\n    ok(!c1.equals(c2), \"different fun contracts\");\n    c1 = fun(Num, Num, {callOnly: true} );\n    c2 = fun(Num, Num, {callOnly: true} );\n    ok(c1.equals(c2), \"same fun contracts with opts\");\n    c1 = fun(Num, Num, {callOnly: true} );\n    c2 = fun(Num, Num, {callOnly: false} );\n    ok(!c1.equals(c2), \"differnt fun contracts with opts\");\n    c1 = fun(Num, Num, {callOnly: false} );\n    c2 = fun(Num, Num, {callOnly: false, newOnly: true} );\n    ok(!c1.equals(c2), \"differnt fun contracts with different opts\");\n    c1 = fun([Str, Num], Num, {callOnly: true} );\n    c2 = fun([Str, Num], Num, {callOnly: true} );\n    ok(c1.equals(c2), \"same fun contracts with opts and multi args\");\n    c1 = fun([Str, Num], Num, {callOnly: true} );\n    c2 = fun([Num, Num], Num, {callOnly: true} );\n    ok(!c1.equals(c2), \"different fun contracts with opts and multi args\");\n    c1 = fun(Num, Num, {this: object({name: Str})} );\n    c2 = fun(Num, Num, {this: object({name: Str})} );\n    ok(c1.equals(c2), \"same fun contracts with this contract\");\n    c1 = fun(Num, Num, {this: object({name: Str})} );\n    c2 = fun(Num, Num, {this: object({name: Num})} );\n    ok(!c1.equals(c2), \"same fun contracts with this contract\");\n\n    o1 = object({a: Num});\n    o2 = object({a: Num});\n    ok(o1.equals(o2), \"same objects\");\n    o1 = object({a: Num});\n    o2 = object({a: Str});\n    ok(!o1.equals(o2), \"different objects\");\n    o1 = object({a: Num, f: fun(Num, Num)});\n    o2 = object({a: Num, f: fun(Num, Num)});\n    ok(o1.equals(o2), \"same objects funtion props\");\n    o1 = object({a: Num, f: fun(Num, Num)});\n    o2 = object({a: Num, f: fun(Num, Str)});\n    ok(!o1.equals(o2), \"different objects funtion props\");\n    o1 = object({a: Num});\n    o2 = object({a: Num, f: fun(Num, Num)});\n    ok(!o1.equals(o2), \"different objects missing function props\");\n\n    ok(!c1.equals(o1), \"different contracts completely\");\n});\n\ntest(\"exports object\", function() {\n    var id, myid, exports, require;\n    exports = Contracts.makeContractsExports(\"id_provider\");\n\n    id = guard(\n        fun(Num, Num),\n        function(x) { return x; }\n    );\n\n    exports.id = id;\n\n    myid = Contracts.use(exports, \"id_consumer\");\n    // should blame id_consumer\n    raises(function() { myid.id(\"foo\"); });\n});",
			"file": "test/test.js",
			"file_size": 19971,
			"file_write_time": 1326391313000000,
			"settings":
			{
				"buffer_size": 19971,
				"line_ending": "Unix"
			}
		},
		{
			"file": "blame.html",
			"settings":
			{
				"buffer_size": 417,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/blametest.js",
			"settings":
			{
				"buffer_size": 11251,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 610,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "cake build",
	"command_palette":
	{
		"height": 107.0,
		"selected_items":
		[
		],
		"width": 602.0
	},
	"console":
	{
		"height": 129.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/tim/dev/contracts.js/lib/contracts.js",
		"/Users/tim/dev/contracts.js/contracts-js.sublime-project",
		"/Users/tim/dev/contracts.js/test/jquery-c.js",
		"/Users/tim/dev/contracts.js/test/blametest.js",
		"/Users/tim/dev/contracts.js/test/test.js",
		"/Users/tim/dev/contracts.js/src/contracts.js",
		"/Users/tim/dev/coffee-script/syntax.coffee",
		"/Users/tim/dev/coffee-script/test/webtest/test.coffee",
		"/Users/tim/dev/coffee-script/src/grammar.coffee",
		"/Users/tim/dev/coffee-script/src/cake.coffee",
		"/Users/tim/dev/coffee-script/src/coffee-script.coffee",
		"/Users/tim/Library/Application Support/Sublime Text 2/Packages/User/Base File.sublime-settings",
		"/Users/tim/dev/coffee-script/test/arrays.coffee",
		"/Users/tim/Library/Application Support/Sublime Text 2/Packages/User/Default (OSX).sublime-keymap",
		"/Users/tim/Library/Application Support/Sublime Text 2/Packages/User/untitled.sublime-build"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/tim/dev/contracts.coffee",
			"*.coffee",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"contract",
			"::",
			"originalValue",
			"unproxy",
			".use",
			".use(.*)",
			".use",
			".use()",
			".use",
			".use()",
			"modulename",
			"options[\"this\"]",
			"this",
			"options[\"this",
			"__contracts",
			"combinators",
			"this con",
			"giveTrue",
			"description",
			",",
			"test"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"Contracts"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/contracts.coffee",
					"settings":
					{
						"buffer_size": 28767,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"keep focus": true,
							"syntax": "Packages/CoffeeScript.tmbundle/Syntaxes/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13014.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Cakefile",
					"settings":
					{
						"buffer_size": 649,
						"regions":
						{
						},
						"selection":
						[
							[
								517,
								517
							]
						],
						"settings":
						{
							"syntax": "Packages/CoffeeScript.tmbundle/Syntaxes/CoffeeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "index.html",
					"settings":
					{
						"buffer_size": 694,
						"regions":
						{
						},
						"selection":
						[
							[
								410,
								410
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test/test.js",
					"settings":
					{
						"buffer_size": 19971,
						"regions":
						{
						},
						"selection":
						[
							[
								111,
								111
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "blame.html",
					"settings":
					{
						"buffer_size": 417,
						"regions":
						{
						},
						"selection":
						[
							[
								159,
								159
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test/blametest.js",
					"settings":
					{
						"buffer_size": 11251,
						"regions":
						{
						},
						"selection":
						[
							[
								45,
								45
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "package.json",
					"settings":
					{
						"buffer_size": 610,
						"regions":
						{
						},
						"selection":
						[
							[
								451,
								451
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"pac",
				"package.json"
			],
			[
				"con",
				"lib/contracts.js"
			],
			[
				"blame",
				"test/blametest.js"
			],
			[
				"blam",
				"blame.html"
			],
			[
				"test",
				"test/test.js"
			],
			[
				"jqu",
				"test/jquery-c.js"
			],
			[
				"ind",
				"index.html"
			],
			[
				"cont",
				"lib/contracts.js"
			],
			[
				"sub",
				"contracts-js.sublime-project"
			],
			[
				"cak",
				"Cakefile"
			],
			[
				"te",
				"test/test.js"
			],
			[
				"synt",
				"syntax.coffee"
			],
			[
				"gram",
				"src/grammar.coffee"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"hs",
				"/Users/tim/dev/hs-scheme/hs-sceme.sublime-project"
			],
			[
				"",
				"/Users/tim/dev/contracts.coffee/contract.coffee.sublime-project"
			],
			[
				"con",
				"/Users/tim/dev/contracts.coffee/contract.coffee.sublime-project"
			],
			[
				"co",
				"/Users/tim/dev/coffee-script/coffee-script.sublime-project"
			],
			[
				"cof",
				"/Users/tim/dev/coffee-script/coffee-script.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
